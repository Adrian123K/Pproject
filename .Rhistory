st44 <- SMA(ts_st4, n=3)
dev.new()
ts_st1 <- ts(st[,1])
ts_st2 <- ts(st[,2])
ts_st3 <- ts(st[,3])
ts_st4 <- ts(st[,4])
plot.ts(ts_st1)
plot.ts(ts_st1)
plot.ts(ts_st1)
plot.ts(ts_st1)
par(mfrow=c(4,1))
plot.ts(ts_st1)
plot.ts(ts_st1)
plot.ts(ts_st1)
plot.ts(ts_st1)
dev.new()
plot.ts(st11)
plot.ts(st22)
plot.ts(st33)
plot.ts(st44)
st11 <- SMA(ts_st1, n=3)
par(mfrow=c(4,1))
plot.ts(st11)
plot.ts(st22)
plot.ts(st33)
plot.ts(st44)
skt <- SMA(ts_st1, n=3)
kt <- SMA(ts_st2, n=3)
lg <- SMA(ts_st3, n=3)
mvno <- SMA(ts_st4, n=3)
par(mfrow=c(4,1))
plot.ts(skt)
plot.ts(kt)
plot.ts(lg)
plot.ts(mvno)
skt1 <- diff(ts_st1, differences = 1)
kt1 <- diff(ts_st2, differences = 1)
lg1 <- diff(ts_st3, differences = 1)
mvno1 <- diff(ts_st4, differences = 1)
skt_diff <- diff(ts_st1, differences = 1)
kt_diff <- diff(ts_st2, differences = 1)
lg_diff <- diff(ts_st3, differences = 1)
mvno_diff <- diff(ts_st4, differences = 1)
par(mfrow=c(4,1))
plot.ts(skt_diff)
plot.ts(kt_diff)
plot.ts(lg_diff)
plot.ts(mvno_diff)
dev.new()
acf(skt_diff, lag.max = 20)
acf(kt_diff, lag.max = 20)
acf(lg_diff, lag.max = 20)
acf(mvno_diff, lag.max = 20)
par(mfrow=c(4,1))
acf(skt_diff, lag.max = 20)
acf(kt_diff, lag.max = 20)
acf(lg_diff, lag.max = 20)
acf(mvno_diff, lag.max = 20)
sample <- read.csv('5g 가입자.csv')
st <- t(sample)
colnames(st) <- c('SKT','KT','LG','MVNO')
st
sample
ts_st1 <- ts(st[,1])
st
plot.ts(ts_st1)
plot.ts(skt)
plot.ts(skt_diff)
par(mfrow=c(2,1))
plot.ts(skt)
plot.ts(skt_diff)
str(st)
sample <- read.csv('5g 가입자.csv')
st <- t(sample)
colnames(st) <- c('SKT','KT','LG','MVNO')
st
sample <- read.csv('5g 가입자.csv')
sample
str(sample)
sample <- read.csv('5g 가입자.csv',head=F)
sample
st <- t(sample)
str(sample)
st
st[,1]
st[,1] <- as.date(st[,1])
st[,1] <- as.Date(st[,1])
st[,1] <- as.Date(st[,1],'%Y-%M')
str(st)
st
sample <- read.csv('5g 가입자.csv',head=F)
str(sample)
st <- t(sample)
colnames(st) <- c('Date','SKT','KT','LG','MVNO')
st
st[,1] <- as.Date(st[,1],'%Y-%m')
st
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
str(st)
sample <- read.csv('5g 가입자.csv',head=F)
str(sample)
st <- t(sample)
st
colnames(st) <- c('Date','SKT','KT','LG','MVNO')
st
st[,2:] <- as.numeric(st[,2:])
st[,2:5] <- as.numeric(st[,2:5])
str(st)
sample <- read.csv('5g 가입자.csv',head=F)
st <- t(sample)
colnames(st) <- c('Date','SKT','KT','LG','MVNO')
st[,2:5] <- as.numeric(st[,2:5])
st
str(st)
st[,2:5] <- as.integer(st[,2:5])
str(st)
sample <- read.csv('5g 가입자.csv',head=F)
sample
str(sample)
setwd('C:/Users/seoju/Documents/ws/Pproject')
library(TTR)
library(forecast)
library(data.table)
library(readxl)
library(tseries)
library(ggplot2)
library(gcookbook)
## Data 붙이기
skt4 <- read.csv('4g_sk.csv',header=F,stringsAsFactors = F)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt4 <- skt4[2,]
skt4 <- as.numeric(skt4)
df_sk <- data.frame(Date,skt4)
## skt data 분기별 freq
ts_skt4 <- ts(df_sk$skt,start=c(2013,1),frequency = 12)
##### skt 4g auto arima
skt4g_auto <- auto.arima(ts_skt4,seasonal = F, stepwise=F, approximation = F)
summary(skt4g_auto)
summary(skt4g_auto)
# 로그+1회 차분
skt4_fit <- auto.arima(diff(log(ts_skt4)))
summary(skt4_fit)
summary(skt4_fit)
ggAcf(diff(log(ts_skt4)))
dev.new()
ggPacf(diff(log(ts_skt4)))
ggtsdisplay(diff(log(ts_skt4)))
skt4_fit <- ariam(diff(log(ts_skt4)),c(0,1,2))
skt4_fit <- arima(diff(log(ts_skt4)),c(0,1,2))
summary(skt4_fit)
skt4_fit <- arima(diff(log(ts_skt4)),c(0,1,2),seasonal=list(c(0,0,1),period=12))
skt4_fit <- arima(diff(log(ts_skt4)),c(0,1,2),seasonal=list(order=c(0,0,1),period=12))
summary(skt4_fit)
skt4_modifit <- arima(log(ts_skt4),order=c(0,1,2),seasonal = list(order=c(0,0,1),period=12))
summary(skt4_modifit)
skt4_modipred <- predict(skt4_modifit, n.ahead=5*12)
dev.new()
ts_skt4 %>%
log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
skt4_modifit <- arima(diff(log(ts_skt4)),order=c(0,1,2),seasonal = list(order=c(0,0,1),period=12))
summary(skt4_modifit)
skt4_modipred <- predict(skt4_modifit, n.ahead=5*12)
dev.new()
ts_skt4 %>%
log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
summary(skt4g_auto)
dev.new()
ts_skt4 %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_skt4 %>%
log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_skt4 %>%
log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
skt4_modifit <- arima(diff(log(ts_skt4)),order=c(0,1,2),seasonal = list(order=c(0,0,1),period=12))
summary(skt4_modifit)
summary(skt4_modifit)
# stlf
dev.new()
ts_skt4 %>% mstl() %>%
autoplot() + xlab("통화량")
forecast <- (stlf(ts_skt4))
summary(forecast)
autoplot(stlf(ts_skt4)) + ggtitle('SKT 4G 예측 모델 STLF')
dev.new()
ts_skt4 %>%
diff(2) %>%
Arima(order=c(4,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 diff=2 ARIMA')
ts_skt4 %>%
log() %>%
Arima(c(2,2,1),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=2 ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
# stlf
dev.new()
autoplot(stlf(ts_skt4),h=12) + ggtitle('SKT 4G 예측 모델 STLF')
forecast <- (stlf(ts_skt4),h=12)
forecast <- (stlf(ts_skt4), h=12)
autoplot(stlf(ts_skt4),) %>% forecast(h=12) + ggtitle('SKT 4G 예측 모델 STLF')
ts_skt4 %>%
stlf() %>%
forecast(h=12) %>%
autoplot()  + ggtitle('SKT 4G 예측 모델 STLF')
summary(skt4g_auto)
summary(forecast)
summary(skt4_modifit)
# ETS 모델 적합도 확인 필요
dev.new()
ts_skt4 %>% ets() %>% forecast(h=12) %>% autoplot() + ggtitle('SKT 4G 예측 모델 ETS')
dev.new()
ts_skt4 %>%
stlf() %>%
forecast(h=12) %>%
autoplot()  + ggtitle('SKT 4G 예측 모델 STLF')
summary(forecast)
ets_forecast <- ets(ts_skt4)
summary(ets_forecast)
##### skt 5g
skt5 <- read.csv('5g_sk.csv',header=F,stringsAsFactors = F)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt5 <- as.numeric(skt5)
df_skt5 <- data.frame(Date,skt5)
ts_skt5 <- ts(df_skt5$skt5,start=c(2013,1),frequency = 12)
end(ts_skt5)
dev.new()
plot.ts(ts_skt5)
plot.ts(ts_skt5,main='SKT 5G 가입자 현황')
tail(df_skt5,14)
tail(df_skt5,15)
auto.arima(ts_skt5,seasonal = F, stepwise=F, approximation = F)
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
skt5_fit <- auto.arima(log(ts_skt5))
tail(df_skt5,15)
ts_skt5 <- ts(df_skt5$skt5,start=c(2013,1),frequency = 12)
skt5_fit <- auto.arima(log(ts_skt5))
skt5_fit <- auto.arima(diff(log(ts_skt5)))
skt5_fit <- arima(diff(log(ts_skt5)))
ts_skt5
is.na(ts_skt5)
skt5_fit <- arima(diff(ts_skt5))
summary(skt5_fit)
skt5_fit <- auto.arima(diff(ts_skt5))
summary(skt5_fit)
ggAcf(diff(ts_skt5))
ggPacf(diff(ts_skt5))
ggAcf(diff(ts_skt5))
skt5_fit_a <- auto.arima(diff(ts_skt5))
summary(skt5_fit_a)
skt5_fit <- arima(diff(ts_skt5),c(1,1,10))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
skt5_fit <- arima(diff(ts_skt5),c(1,1,1))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
ggAcf(diff(ts_skt5))
skt5_fit <- arima(diff(ts_skt5,2),c(1,2,1))
summary(skt5_fit)
skt5_fit <- arima(diff(ts_skt5),c(1,2,1))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
adf.test(diff(ts_skt5,2),alternative='stationary',k=0)
ggtsdisplay(diff(ts_skt5))
ggtsdisplay(diff(ts_skt5,2))
skt5_fit <- arima(diff(ts_skt5),c(2,2,0))
summary(skt5_fit)
skt5_fit <- arima(diff(ts_skt5,2),c(2,2,0))
summary(skt5_fit)
skt5_fit <- arima(diff(ts_skt5),c(2,1,0))
summary(skt5_fit)
skt5_fit <- arima(diff(ts_skt5),c(2,2,0))
summary(skt5_fit)
adf.test(ts_skt5,alternative='stationary',k=0)
adf.test(diff(ts_skt5,3),alternative='stationary',k=0)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
skt5_fit_a <- auto.arima(diff(ts_skt5))
summary(skt5_fit_a)
##### skt 5g
skt5 <- read.csv('5g_sk.csv',header=F,stringsAsFactors = F)
skt5
skt5[76:89]
skt5 <- skt5[76:89]
Date <- seq(as.Date('2019-04-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt5 <- as.numeric(skt5)
df_skt5 <- data.frame(Date,skt5)
tail(df_skt5,15)
ts_skt5 <- ts(df_skt5$skt5,start=c(2019,4),frequency = 12)
end(ts_skt5)
dev.new()
plot.ts(ts_skt5,main='SKT 5G 가입자 현황')
ggAcf(ts_skt5,lag=30)
ggPacf(ts_skt5,lag=30)
auto.arima(ts_skt5,seasonal = F, stepwise=F, approximation = F)
skt5_fit_a <- auto.arima(diff(ts_skt5))
summary(skt5_fit_a)
adf.test(ts_skt5,alternative='stationary',k=0)
ggAcf(diff(ts_skt5))
ggPacf(diff(ts_skt5))
skt5_fit <- arima(diff(ts_skt5),c(0,1,0))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
ggtsdisplay(diff(ts_skt5))
adf.test(diff(log(ts_skt5)),alternative='stationary',k=0)
ggtsdisplay(diff(log(ts_skt5)))
skt5_fit_a2 <- auto.arima(diff(log(ts_skt5)))
summary(skt5_fit_a2)
adf.test(diff(log(ts_skt5)),alternative='stationary',k=0)
ggAcf(diff(log(ts_skt5)))
dev.new()
ts_skt5 %>%
log() %>%
Arima(order=c(0,2,0)) %>%
forecast() %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
ts_skt5 %>%
Arima(order=c(0,2,0)) %>%
forecast() %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
ts_skt5 %>%
log() %>%
Arima(order=c(0,2,0)) %>%
forecast() %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
ts_skt5 %>%
log() %>%
Arima(order=c(0,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
##### skt 5g
skt5 <- read.csv('5g_sk.csv',header=F,stringsAsFactors = F)
#skt5 <- skt5[76:89]
#Date <- seq(as.Date('2019-04-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt5 <- as.numeric(skt5)
df_skt5 <- data.frame(Date,skt5)
ts_skt5 <- ts(df_skt5$skt5,start=c(2019,4),frequency = 12)
dev.new()
plot.ts(ts_skt5,main='SKT 5G 가입자 현황')
ts_skt5 <- ts(df_skt5$skt5,start=c(2013,1),frequency = 12)
plot.ts(ts_skt5,main='SKT 5G 가입자 현황')
ggAcf(ts_skt5,lag=15)
auto.arima(ts_skt5,seasonal = F, stepwise=F, approximation = F)
ggPacf(ts_skt5,lag=15)
ggAcf(diff(ts_skt5))
ggPacf(diff(ts_skt5))
skt5_fit <- arima(diff(ts_skt5),c(0,1,10))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
ggtsdisplay(diff(log(ts_skt5)))
ggtsdisplay(diff(ts_skt5))
skt5_fit <- arima(diff(ts_skt5),c(1,1,10))
summary(skt5_fit)
skt5_fit <- arima(diff(ts_skt5),c(0,1,10))
summary(skt5_fit)
adf.test(diff(ts_skt5),alternative='stationary',k=0)
skt5_fit_a2 <- auto.arima(diff(ts_skt5))
summary(skt5_fit_a2)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,1))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,2))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,4))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,5))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,6))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,7))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,8))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(1,1,6))
summary(skt_fit_a3)
skt_fit_a3 <- arima(diff(ts_skt5),c(0,1,6))
summary(skt_fit_a3)
dev.new()
ts_skt5 %>%
Arima(order=c(0,1,6)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g 예측 모델')
skt5_test <- arima(diff(ts_skt5,differences = 2),c(5,2,0))
dev.new()
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot() + ggtitle('SKT 5g 예측 모델 c(5,2,0)')
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g 예측 모델 c(5,2,0)')
dev.new()
ts_skt5 %>%
arima(c(0,1,6)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5G 예측 모델 c(0,1,6)')
ts_skt5 %>%
Arima(c(0,1,6)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5G 예측 모델 c(0,1,6)')
skt5_test <- arima(diff(ts_skt5,differences = 2),c(5,2,0))
summary(skt5_test)
f_forecate <- forecast(skt4_test,h=12)
f_forecate <- forecast(skt5_test,h=12)
f_forecast <- forecast(skt5_test,h=12)
f_forecast
fa_forecast <- forecast(auto.arima(diff(ts_skt5)))
fa_forecast
fa_forecast <- forecast(auto.arima(diff(ts_skt5)),h=12)
fa_forecast
f3_forecast <- forecast(skt_fit_a3,h=12)
f3_forecast
skt5_fit_a1 <- arima(diff(ts_skt5),c(0,1,10))
summary(skt5_fit_a1)
f1_forecast <- forecast(skt5_fit_a1)
f1_forecast
f1_forecast <- forecast(skt5_fit_a1,h=12)
f1_forecast
skt5_fit_a <- auto.arima(ts_skt5)
summary(skt5_fit_a)
adf.test(ts_skt5,alternative='stationary',k=0)
skt5_fit_a1 <- auto.arima(diff(ts_skt5))
summary(skt5_fit_a1)
fa_forecast <- forecast(skt5_fit_a1,h=12)
fa_forecast
skt5_fit_a2 <- arima(diff(ts_skt5),c(0,1,10))
summary(skt5_fit_a2)
f2_forecast <- forecast(skt5_fit_a2,h=12)
f2_forecast
skt_fit_a3 <- arima(diff(ts_skt5),c(0,1,6))
summary(skt_fit_a3)
f3_forecast <- forecast(skt_fit_a3,h=12)
f3_forecast
skt5_fit_a4 <- arima(diff(ts_skt5,differences = 2),c(5,2,0))
summary(skt5_fit_a4)
f4_forecast <- forecast(skt5_fit_a4,h=12)
f4_forecast
test55 <- window(df_skt5, start=c(2013,1))
test55 <- window(ts_skt5, start=c(2013,1))
fit <- ets(test55)
summary(fit)
fit <- ets(test55,damped=T, model='ZZZ')
summary(fit)
forecast(fit)
fit %>%
forecast() %>%
autoplot()
fit %>%
forecast(h=12) %>%
autoplot()
fit %>%
forecast(h=12,level=c(80,95)) %>%
autoplot()
fit %>%
forecast(h=12,level=c(80,95)) %>%
autoplot() + ggtitle('SKT 5G ETS 예측 모델')
fit %>%
forecast(h=12,level=c(90,95)) %>%
autoplot() + ggtitle('SKT 5G ETS 예측 모델')
fit %>%
forecast(h=12,level=c(80,95)) %>%
autoplot() + ggtitle('SKT 5G ETS 예측 모델')
forecast(h=12,level=c(80,95))
forecast(fit,h=12,level=c(80,95))
