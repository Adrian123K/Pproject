guides(colour=guide_legend(title=" "))
dev.new()
ts_skt4 %>%
# log() %>%
Arima(order=c(4,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 diff=2 ARIMA')
ts_skt4 %>%
#log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
kt4 <- read.csv('4g_kt.csv',header=F,stringsAsFactors = F)
kt4 <- as.numeric(kt4)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
df_kt <- data.frame(Date, kt4)
ts_kt4 <- ts(df_kt$kt4,start=c(2013,1),frequency = 12)
# 원본데이터 확인
dev.new()
ggtsdisplay(ts_kt4)
dev.new()
ggtsdisplay(diff(log(ts_kt4),differences = 2),lag=10)
# auto arima로 확인
auto.arima(ts_kt4,seasonal = F, stepwise=F, approximation = F)
ggtsdisplay(diff(log(ts_kt4),differences = 2),lag=10,main='KT 4G diff=2 ACF, PACF plot')
kt4_fit <- arima(diff(log(ts_kt4),differences = 2),c(2,2,0),)
summary(kt4_fit)
kt4_fit_a <- auto.arima(diff(log(ts_skt4)))
summary(kt4_fit_a)
dev.new()
ggtsdisplay(diff(log(ts_kt4)))
kt4_fit_a2 <- arima(diff(log(ts_skt4)),c(0,1,2),seasonal=list(order=c(0,0,1),period=12))
summary(skt4_fit_a2)
kt4_fit_a2 <- arima(diff(log(ts_skt4)),c(0,1,2),seasonal=list(order=c(0,0,1),period=12))
summary(kt4_fit_a2)
adf.test(diff(ts_kt4,differences = 2),alternative='stationary',k=0)
summary(kt4_fit_a)
summary(kt4_fit_a2)
forecast(kt4_fit_a2)
Box.test(kt4_fit_a2)
Box.test(ts_kt4)
Box.test(diff(log(ts_kt4)))
adf.test(diff(log(ts_kt4)),alternative = 'stationary',k=0)
Box.test(diff(log(ts_kt4)))
plot(diff(log(ts_kt4)))
plot(diff(log(ts_kt4),2))
plot(log(ts_kt4))
plot(diff(ts_kt4,2))
plot(diff(ts_kt4))
plot(diff(log(ts_kt4)))
adf.test(diff(log(ts_kt4)),alternative = 'stationary',k=0)
Box.test(diff(log(ts_kt4)))
auto.arima(log(ts_kt4))
fit_test <- arima(log(ts_kt4),c(1,2,2),seasonal = list(order=c(0,0,0),period=12))
summary(fit_test)
Box.test(fit_test)
Box.test(fit_test$residuals)
test_pred <- predict(fit_test,n.ahead=12)
ts.plot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3))
plot(ts_kt4)
plot(mfrow=c(2,1))
par(mfrow=c(2,1))
ts.plot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3))
plot(ts_kt4)
autoplot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3))
plot(ts_kt4)
ts.plot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3))
ts.plot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3),
main='KT 4G 수요 예측 plot')
plot(ts_kt4)
plot(ts_kt4, main='KT 4G 가입자 현황 plot')
ts.plot(ts_kt4,
exp(test_pred$pred),
log='y',
lty=c(1,3),
main='KT 4G 수요 예측 plot')
library(TTR)
library(forecast)
library(data.table)
library(readxl)
library(tseries)
library(ggplot2)
library(gcookbook)
setwd('d:/Pproject')
getwd()
######## SKT 4G
skt4 <- read.csv('4g_sk.csv',header=F,stringsAsFactors = F)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt4 <- skt4[2,]
skt4 <- as.numeric(skt4)
df_sk <- data.frame(Date,skt4)
ts_skt4 <- ts(df_sk$skt,start=c(2013,1),frequency = 12)
auto.arima(ts_skt4)
summary(ts_skt4)
plot(decompose(ts_skt4))
dev.new()
plot(decompose(ts_skt4))
plot(decompose(ts_skt4), main='SKT 4G Decompose Plot')
plot(decompose(ts_skt4),)
adf.test(ts_skt4,alternative = 'statinary',k=0)
adf.test(ts_skt4,alternative = 'stationary',k=0)
dev.new()
plot(diff(ts_skt4))
plot(diff(log(ts_skt4)))
par(mfrow=c(2,2))
plot(ts_skt4)
plot(diff(log(ts_skt4),1))
plot(diff(log(ts_skt4),2))
plot(log(ts_skt4))
plot(ts_skt4)
plot(log(ts_skt4))
plot(diff(log(ts_skt4),1))
plot(diff(log(ts_skt4),2))
par(mfrow=c(2,2))
acf(ts_skt4)
pacf(ts_skt4)
acf(log(ts_skt4))
pacf(log(ts_skt4))
par(mfrow=c(2,2))
acf(log(ts_skt4))
pacf(log(ts_skt4))
acf(diff(log(ts_skt4)))
pacf(diff(log(ts_skt4)))
auto.arima(diff(log(ts_skt4)))
fit <- arima(log(ts_skt4),c(0,1,1),seasonal = list(order=c(0,0,1), period=12),)
summary(fit)
Box.test(fit)
Box.test(fit$residuals)
pred <- predict(fit, n.ahead = 12)
dev.new()
ts.plot(ts_skt4,
exp(pred$pred),
log='y',
lty=c(1,3))
getwd()
library(TTR)
library(forecast)
library(data.table)
library(readxl)
library(tseries)
library(ggplot2)
library(gcookbook)
######## SKT 4G TS
skt4 <- read.csv('4g_sk.csv',header=F,stringsAsFactors = F)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
skt4 <- skt4[2,]
skt4 <- as.numeric(skt4)
df_sk <- data.frame(Date,skt4)
ts_skt4 <- ts(df_sk$skt,start=c(2013,1),frequency = 12)
install.packages('urca')
install.packages("urca")
library(urca)
ts_skt4 %>% ur.kpss() %>% summary()
ts_skt4 %>% diff() %>%  ur.kpss() %>% summary()
ts_skt4 %>% log() %>%  diff() %>%  ur.kpss() %>% summary()
ndiffs(ts_skt4)
ts_skt4 %>% log() %>% diff() %>%  diff() %>%  ur.kpss() %>% summary()
nsdiffs(ts_skt4)
dev.new()
autoplot(ts_skt4)
fit <- auto.arima(ts_stk4,seasonal = False)
fit <- auto.arima(ts_skt4,seasonal = False)
fit <- auto.arima(ts_skt4,seasonal = FALSE)
fit
fit2 <- auto.arima(ts_skt4,seasonal = F, approximation = F)
fit2
fit2 <- auto.arima(ts_skt4,seasonal = F, approximation = F, stepwise=F)
fit2
ggtsdisplay(fit)
fit
fit
dev.new()
fit %>% forecast(h=12) %>% autoplot()
dev.new()
fit2 %>% forecast(h=12) %>% autoplot()
fit3 <- auto.arima(log(ts_skt4))
fit3
ggtsdisplay(log(ts_skt4))
ggtsdisplay(diff(log(ts_skt4)))
fit3 <- Arima(log(ts_skt4),c(2,1,0),seasonal = F)
fit3 <- Arima(log(ts_skt4),c(2,1,0),)
fit3
fit3 %>% forecast(h=12) %>% autoplot()
fit3 <- Arima(ts_skt4,c(2,1,0),)
fit3
fit3 %>% forecast(h=12) %>% autoplot()
ndiffs(log(ts_skt4))
fit3 <- Arima(log(ts_skt4),c(2,2,0),)
fit3
fit3 %>% forecast(h=12) %>% autoplot()
lambda <- BoxCox.lambda(ts_skt4)
lambda
autoplot(Boxcox(ts_skt4,lambda))
autoplot(BoxCox(ts_skt4,lambda))
fit2
ggAcf(ts_skt4,lag=12)
ggPacf(ts_skt4,lag=12)
ggAcf(log(ts_skt4),lag=12)
ggPacf(log(ts_skt4),lag=12)
ggtsdisplay(log(ts_skt4))
ggtsdisplay(diff(log(ts_skt4)))
fit4 <- auto.arima(diff(log(ts_skt4)),seasonal = F, approximation = F, stepwise=F)
fit4
residuals(fit4)
checkresiduals(fit4)
fit4
fit4_m <- arima(diff(ts_skt4),c(2,1,2),drift=T)
fit4_m <- arima(diff(ts_skt4),c(2,1,2),seasonal = F, approximation = F, stepwise=F)
fit4_m <- arima(diff(ts_skt4),c(2,1,2),seasonal = F)
fit4_m <- arima(diff(ts_skt4),c(2,1,2),)
summary(fit4_m)
dev.new()
fit4_m %>% forecast(h=12) %>% autoplot()
fit4_m <- arima(ts_skt4,c(2,1,2),)
fit4_m %>% forecast(h=12) %>% autoplot()
dev.new()
ts_skt4 %>%
log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_skt4 %>%
log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_skt4 %>%
#log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
# 로그+1회 차분
skt4_fit_a <- auto.arima(diff(log(ts_skt4)))
skt4_fit_a
kt4_fit_a <- auto.arima(diff(log(ts_skt4)))
ktf_fit_a
kt4_fit_a
kt4g_auto <- auto.arima(ts_kt4,seasonal = F, stepwise=F, approximation = F)
kt4g_auto <- auto.arima(ts_kt4,seasonal = F, stepwise=F, approximation = F)
kt4g_auto
dev.new()
ts_kt4 %>%
#log() %>%
Arima(order=c(0,2,1)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 Auto ARIMA')
kt4_fit_a <- auto.arima(diff(log(ts_skt4)))
kt4_fit_a
kt4_fit_a
#kt4_fit <- predict(kt4_fit, n.ahead=12)
kt4_fit_f <- arima(diff(log(ts_kt4)),order=c(0,1,1),seasonal=list(order=c(0,0,1),period=12))
kt4_fit_f
dev.new()
ts_kt4 %>%
#log() %>%
Arima(kt4_fit_f) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(0,0,1),seasonal=list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(0,0,1),seasonal=list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_kt4 %>%
#log() %>%
Arima(order=c(0,2,1)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_kt4 %>%
#log() %>%
Arima(c(0,0,1),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_skt4 %>%
log() %>%
Arima(c(0,1,2),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 log,diff=1 ARIMA')
dev.new()
ts_skt4 %>%
log() %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 4G 예측 모델 Auto ARIMA')
dev.new()
kt4g_auto
ts_kt4 %>%
#log() %>%
Arima(order=c(0,2,1)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_kt4 %>%
#log() %>%
Arima(c(0,0,1),seasonal=list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(0,0,2),seasonal=list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
kt4_fit_a <- auto.arima(diff(log(ts_kt4)))
kt4_fit_a
dev.new()
ts_kt4 %>%
#log() %>%
Arima(c(1,1,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
kt4_fit_f
kt4_fit_a <- auto.arima(log(ts_kt4))
kt4_fit_a
ts_kt4 %>%
#log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
kt4_fit_a <- auto.arima(diff(ts_kt4))
kt4_fit_a
kt4_fit_a <- auto.arima(log(ts_kt4))
kt4_fit_a
ggtsdisplay(ts_kt4)
ggtsdisplay(diff(ts_kt4))
ggtsdisplay(diff(log(ts_kt4)))
ggtsdisplay(diff(ts_kt4),2)
ggtsdisplay(diff(ts_kt4,2),)
ggtsdisplay(diff(log(ts_kt4),2))
autoplot(decompose(ts_kt4))
ggtsdisplay(diff(ts_kt4),lag=6)
ggtsdisplay(diff(ts_kt4),lag=24)
ggtsdisplay(ts_kt4,lag=24)
# 원본데이터 확인
dev.new()
ts_kt4 %>% diff(lag=6) %>% autoplot()
ts_kt4 %>% diff(lag=6) %>% ggtsdisplay()
# 원본데이터 확인
dev.new()
autoplot(decompose(ts_kt4))
plot(decompose(ts_kt4))
dev.new()
ts_kt4 %>%
#log() %>%
Arima(order=c(0,2,1)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 Auto ARIMA')
dev.new()
ts_kt4 %>%
#log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
diff()
ts_kt4 %>%
diff() %>%
#log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(1,2,2),) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
summary(kt4_fit_f)
kt4_fit_f %>%
#log() %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
fets <- function(x, h) {
forecast(ets(x), h = h)
}
kt_e1 <- tsCV(ts_kt4,fets,h1)
kt_e1 <- tsCV(ts_kt4,fets,h=1)
farima <- function(x, h) {
forecast(auto.arima(x), h=h)
}
kt_e2 <- tsCV(ts_kt4,farima,h=1)
mean(kt_e1^2, na.rm=T)
mean(kt_e2^2, na.rm=T)
dev.new()
ts_kt4 %>% ets() %>% forecast(h=12) %>% autoplot()
summary(kt_e1)
forecast(ets(ts_kt4),h=12)
ts_kt4 %>% ets() %>% forecast(h=12) %>% autoplot() + ggtitle('KT 4G 예측 모델 ets')
summary(kt4g_auto)
forecast(ets(ts_kt4),h=12)
summary(ets(ts_kt4))
dev.new()
kt4_fit_f %>%
#log() %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
ts_kt4 %>%
#log() %>%
Arima(c(0,2,1),seasonal = list(order=c(0,0,1),period=12)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('KT 4G 예측 모델 log,diff=1 ARIMA')
#kt4_fit <- predict(kt4_fit, n.ahead=12)
kt4_fit_f <- arima(ts_kt4,order=c(0,2,1),seasonal=list(order=c(0,0,1),period=12))
summary(kt4_fit_f)
summary(kt4g_auto)
##### kt 5g
kt5 <- read.csv('5g_kt.csv',header=F,stringsAsFactors = F)
Date <- seq(as.Date('2013-01-01','%Y-%m-%d'),as.Date('2020-05-01','%Y-%m-%d'),'months')
kt5 <- as.numeric(kt5)
df_kt5 <- data.frame(Date,kt5)
ts_kt5 <- ts(df_kt5$kt5,start=c(2013,1),frequency = 12)
end(ts_kt5)
dev.new()
ggtsdisplay(ts_kt5)
auto.arima(ts_kt5,seasonal = F, stepwise=F, approximation = F)
kt5_test <- arima(diff(ts_kt5,differences = 2),c(5,2,0))
dev.new()
checkresiduals(kt5_test)
ts_kt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g Auto Arima 예측 모델')
dev.new()
ggtsdisplay(diff(ts_kt5,differences = 2))
kt5_fit <- arima(c(5,2,0))
summary(kt5_fit)
summary(kt5_test)
kt5_fit <- arima(diff(ts_kt5),c(5,2,0))
summary(kt5_fit)
summary(kt5_test)
forecast(kt5_fit)
forecast(kt5_test)
kt5_fit <- arima(diff(ts_kt5,2),c(5,2,0))
summary(kt5_fit)
dev.new()
ts_kt5 %>%
diff(2) %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g Auto Arima 예측 모델')
ts_kt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g Auto Arima 예측 모델')
ts_kt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g MA(5,2,0) 예측 모델')
dev.new()
ts_kt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g AR(5,2,0) 예측 모델')
# 3번 모델 예측 그래프
dev.new()
ts_skt5 %>%
Arima(c(0,1,6)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5G 예측 모델 c(0,1,6)')
# 4번 모델 예측 그래프
dev.new()
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g 예측 모델 c(5,2,0)')
# 4번 모델 예측 그래프
dev.new()
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g AR(5,2,0) 예측 모델 ')
ts_skt5 %>%
Arima(order=c(5,2,0)) %>%
forecast(h=12) %>%
autoplot() + ggtitle('SKT 5g MA(5,2,0) 예측 모델 ')
ts_kt5 %>%
Arima(order=c(5,2,0)) %>%
forecast() %>%
autoplot()+ ggtitle('KT 5g MA(5,2,0) 예측 모델')
